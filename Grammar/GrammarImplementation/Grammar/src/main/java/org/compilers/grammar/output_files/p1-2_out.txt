<program> -1 -1
<lines> 0 -1
<line> 1 -1
<lines_element> 1 2
<declaration> 2 -1
let 4 -1
<compound_declaration> 4 5
; 4 6
<simple_declaration> 6 -1
<compound_declaration_element> 6 8
<id_list> 8 -1
: 8 10
<type> 8 11
id 10 -1
<id_list_element> 10 13
<simple_type> 12 -1
<complex_type> 12 15
integer 15 -1
, 9 -1
<compound_declaration> 9 18
<simple_declaration> 19 -1
<compound_declaration_element> 19 20
<id_list> 20 -1
: 20 22
<type> 20 23
id 22 -1
<id_list_element> 22 25
<simple_type> 24 -1
<complex_type> 24 27
integer 27 -1
, 21 -1
<compound_declaration> 21 30
<simple_declaration> 31 -1
<compound_declaration_element> 31 32
<id_list> 32 -1
: 32 34
<type> 32 35
id 34 -1
<id_list_element> 34 37
<simple_type> 36 -1
<complex_type> 36 39
integer 39 -1
<lines> 3 -1
<line> 42 -1
<lines_element> 42 43
<statement> 43 -1
<simple_stmt> 45 -1
<io_stmt> 46 -1
write 47 -1
( 47 48
<expression_list> 47 49
) 47 50
; 47 51
<expression> 50 -1
<expression_list_element> 50 53
<term> 53 -1
<expression_element> 53 55
<factor> 55 -1
<term_element> 55 57
const 57 -1
<lines> 44 -1
<line> 60 -1
<lines_element> 60 61
<statement> 61 -1
<simple_stmt> 63 -1
<io_stmt> 64 -1
read 65 -1
( 65 66
<id> 65 67
) 65 68
; 65 69
id 68 -1
<array_or_not> 68 71
<lines> 62 -1
<line> 73 -1
<lines_element> 73 74
<statement> 74 -1
<structured_statement> 76 -1
<if_stmt> 77 -1
if 78 -1
<c_expression> 78 79
then 78 80
<compound_stmt> 78 81
<if_stmt_element> 78 82
<c_term> 80 -1
<c_expression_element> 80 84
<c_factor> 84 -1
<c_factor_element> 84 86
<condition> 86 -1
<expression> 88 -1
<condition_element> 88 89
<term> 89 -1
<expression_element> 89 91
<factor> 91 -1
<term_element> 91 93
<id> 93 -1
id 95 -1
<array_or_not> 95 96
<relational_op> 90 -1
<expression> 90 98
< 98 -1
<term> 99 -1
<expression_element> 99 101
<factor> 101 -1
<term_element> 101 103
const 103 -1
or 85 -1
<c_expression> 85 106
<c_term> 107 -1
<c_expression_element> 107 108
<c_factor> 108 -1
<c_factor_element> 108 110
<condition> 110 -1
<expression> 112 -1
<condition_element> 112 113
<term> 113 -1
<expression_element> 113 115
<factor> 115 -1
<term_element> 115 117
<id> 117 -1
id 119 -1
<array_or_not> 119 120
<relational_op> 114 -1
<expression> 114 122
> 122 -1
<term> 123 -1
<expression_element> 123 125
<factor> 125 -1
<term_element> 125 127
const 127 -1
and 111 -1
<c_term> 111 130
<c_factor> 131 -1
<c_factor_element> 131 132
<condition> 132 -1
<expression> 134 -1
<condition_element> 134 135
<term> 135 -1
<expression_element> 135 137
<factor> 137 -1
<term_element> 137 139
<id> 139 -1
id 141 -1
<array_or_not> 141 142
<arithmetic_p_op> 140 -1
<term> 140 144
% 144 -1
<factor> 145 -1
<term_element> 145 147
const 147 -1
<relational_op> 136 -1
<expression> 136 150
is 150 -1
<term> 151 -1
<expression_element> 151 153
<factor> 153 -1
<term_element> 153 155
const 155 -1
begin 82 -1
<stmt_list> 82 158
end 82 159
<statement> 159 -1
<stmt_list_element> 159 161
<simple_stmt> 161 -1
<io_stmt> 163 -1
write 164 -1
( 164 165
<expression_list> 164 166
) 164 167
; 164 168
<expression> 167 -1
<expression_list_element> 167 170
<term> 170 -1
<expression_element> 170 172
<factor> 172 -1
<term_element> 172 174
const 174 -1
else 83 -1
<compound_stmt> 83 177
begin 178 -1
<stmt_list> 178 179
end 178 180
<statement> 180 -1
<stmt_list_element> 180 182
<simple_stmt> 182 -1
<assignment_stmt> 184 -1
<id> 185 -1
<assignment_stmt_element> 185 186
; 185 187
id 186 -1
<array_or_not> 186 189
<assignment_b_op> 187 -1
<expression> 187 191
= 191 -1
<term> 192 -1
<expression_element> 192 194
<factor> 194 -1
<term_element> 194 196
const 196 -1
<stmt_list> 183 -1
<statement> 199 -1
<stmt_list_element> 199 200
<structured_statement> 200 -1
<for_stmt> 202 -1
for 203 -1
<assignment_stmt> 203 204
, 203 205
<c_expression> 203 206
, 203 207
<assignment_stmt> 203 208
do 203 209
<compound_stmt> 203 210
<id> 205 -1
<assignment_stmt_element> 205 212
; 205 213
id 212 -1
<array_or_not> 212 215
<assignment_b_op> 213 -1
<expression> 213 217
= 217 -1
<term> 218 -1
<expression_element> 218 220
<factor> 220 -1
<term_element> 220 222
const 222 -1
<c_term> 207 -1
<c_expression_element> 207 225
<c_factor> 225 -1
<c_factor_element> 225 227
<condition> 227 -1
<expression> 229 -1
<condition_element> 229 230
<term> 230 -1
<expression_element> 230 232
<factor> 232 -1
<term_element> 232 234
<id> 234 -1
id 236 -1
<array_or_not> 236 237
<arithmetic_p_op> 235 -1
<term> 235 239
* 239 -1
<factor> 240 -1
<term_element> 240 242
<id> 242 -1
id 244 -1
<array_or_not> 244 245
<relational_op> 231 -1
<expression> 231 247
<= 247 -1
<term> 248 -1
<expression_element> 248 250
<factor> 250 -1
<term_element> 250 252
<id> 252 -1
id 254 -1
<array_or_not> 254 255
<id> 209 -1
<assignment_stmt_element> 209 257
; 209 258
id 257 -1
<array_or_not> 257 260
<assignment_b_op> 258 -1
<expression> 258 262
+= 262 -1
<term> 263 -1
<expression_element> 263 265
<factor> 265 -1
<term_element> 265 267
const 267 -1
begin 211 -1
<stmt_list> 211 270
end 211 271
<statement> 271 -1
<stmt_list_element> 271 273
<structured_statement> 273 -1
<if_stmt> 275 -1
if 276 -1
<c_expression> 276 277
then 276 278
<compound_stmt> 276 279
<if_stmt_element> 276 280
<c_term> 278 -1
<c_expression_element> 278 282
<c_factor> 282 -1
<c_factor_element> 282 284
<condition> 284 -1
<expression> 286 -1
<condition_element> 286 287
<term> 287 -1
<expression_element> 287 289
<factor> 289 -1
<term_element> 289 291
<id> 291 -1
id 293 -1
<array_or_not> 293 294
<arithmetic_p_op> 292 -1
<term> 292 296
% 296 -1
<factor> 297 -1
<term_element> 297 299
<id> 299 -1
id 301 -1
<array_or_not> 301 302
<relational_op> 288 -1
<expression> 288 304
is 304 -1
<term> 305 -1
<expression_element> 305 307
<factor> 307 -1
<term_element> 307 309
const 309 -1
begin 280 -1
<stmt_list> 280 312
end 280 313
<statement> 313 -1
<stmt_list_element> 313 315
<simple_stmt> 315 -1
<assignment_stmt> 317 -1
<id> 318 -1
<assignment_stmt_element> 318 319
; 318 320
id 319 -1
<array_or_not> 319 322
<assignment_b_op> 320 -1
<expression> 320 324
= 324 -1
<term> 325 -1
<expression_element> 325 327
<factor> 327 -1
<term_element> 327 329
const 329 -1
<stmt_list> 201 -1
<statement> 332 -1
<stmt_list_element> 332 333
<structured_statement> 333 -1
<if_stmt> 335 -1
if 336 -1
<c_expression> 336 337
then 336 338
<compound_stmt> 336 339
<if_stmt_element> 336 340
<c_term> 338 -1
<c_expression_element> 338 342
<c_factor> 342 -1
<c_factor_element> 342 344
<condition> 344 -1
<expression> 346 -1
<condition_element> 346 347
<term> 347 -1
<expression_element> 347 349
<factor> 349 -1
<term_element> 349 351
<id> 351 -1
id 353 -1
<array_or_not> 353 354
<relational_op> 348 -1
<expression> 348 356
is 356 -1
<term> 357 -1
<expression_element> 357 359
<factor> 359 -1
<term_element> 359 361
const 361 -1
begin 340 -1
<stmt_list> 340 364
end 340 365
<statement> 365 -1
<stmt_list_element> 365 367
<simple_stmt> 367 -1
<io_stmt> 369 -1
write 370 -1
( 370 371
<expression_list> 370 372
) 370 373
; 370 374
<expression> 373 -1
<expression_list_element> 373 376
<term> 376 -1
<expression_element> 376 378
<factor> 378 -1
<term_element> 378 380
const 380 -1
else 341 -1
<compound_stmt> 341 383
begin 384 -1
<stmt_list> 384 385
end 384 386
<statement> 386 -1
<stmt_list_element> 386 388
<simple_stmt> 388 -1
<io_stmt> 390 -1
write 391 -1
( 391 392
<expression_list> 391 393
) 391 394
; 391 395
<expression> 394 -1
<expression_list_element> 394 397
<term> 397 -1
<expression_element> 397 399
<factor> 399 -1
<term_element> 399 401
const 401 -1
