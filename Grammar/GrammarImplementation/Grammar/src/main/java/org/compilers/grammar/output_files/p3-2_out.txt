<program> -1 -1
<lines> 0 -1
<line> 1 -1
<lines_element> 1 2
<declaration> 2 -1
let 4 -1
<compound_declaration> 4 5
; 4 6
<simple_declaration> 6 -1
<compound_declaration_element> 6 8
<id_list> 8 -1
: 8 10
<type> 8 11
id 10 -1
<id_list_element> 10 13
<simple_type> 12 -1
<complex_type> 12 15
integer 15 -1
[ 16 -1
<array_initialisation> 16 18
] 16 19
, 9 -1
<compound_declaration> 9 21
<simple_declaration> 22 -1
<compound_declaration_element> 22 23
<id_list> 23 -1
: 23 25
<type> 23 26
id 25 -1
<id_list_element> 25 28
<simple_type> 27 -1
<complex_type> 27 30
integer 30 -1
, 24 -1
<compound_declaration> 24 33
<simple_declaration> 34 -1
<compound_declaration_element> 34 35
<id_list> 35 -1
: 35 37
<type> 35 38
id 37 -1
<id_list_element> 37 40
<simple_type> 39 -1
<complex_type> 39 42
integer 42 -1
, 36 -1
<compound_declaration> 36 45
<simple_declaration> 46 -1
<compound_declaration_element> 46 47
<id_list> 47 -1
: 47 49
<type> 47 50
id 49 -1
<id_list_element> 49 52
<simple_type> 51 -1
<complex_type> 51 54
integer 54 -1
, 48 -1
<compound_declaration> 48 57
<simple_declaration> 58 -1
<compound_declaration_element> 58 59
<id_list> 59 -1
: 59 61
<type> 59 62
id 61 -1
<id_list_element> 61 64
<simple_type> 63 -1
<complex_type> 63 66
integer 66 -1
<lines> 3 -1
<line> 69 -1
<lines_element> 69 70
<statement> 70 -1
<simple_stmt> 72 -1
<io_stmt> 73 -1
write 74 -1
( 74 75
<expression_list> 74 76
) 74 77
; 74 78
<expression> 77 -1
<expression_list_element> 77 80
<term> 80 -1
<expression_element> 80 82
<factor> 82 -1
<term_element> 82 84
const 84 -1
<lines> 71 -1
<line> 87 -1
<lines_element> 87 88
<statement> 88 -1
<simple_stmt> 90 -1
<io_stmt> 91 -1
read 92 -1
( 92 93
<id> 92 94
) 92 95
; 92 96
id 95 -1
<array_or_not> 95 98
<lines> 89 -1
<line> 100 -1
<lines_element> 100 101
<statement> 101 -1
<simple_stmt> 103 -1
<io_stmt> 104 -1
write 105 -1
( 105 106
<expression_list> 105 107
) 105 108
; 105 109
<expression> 108 -1
<expression_list_element> 108 111
<term> 111 -1
<expression_element> 111 113
<factor> 113 -1
<term_element> 113 115
const 115 -1
<lines> 102 -1
<line> 118 -1
<lines_element> 118 119
<statement> 119 -1
<structured_statement> 121 -1
<for_stmt> 122 -1
for 123 -1
<assignment_stmt> 123 124
, 123 125
<c_expression> 123 126
, 123 127
<assignment_stmt> 123 128
do 123 129
<compound_stmt> 123 130
<id> 125 -1
<assignment_stmt_element> 125 132
; 125 133
id 132 -1
<array_or_not> 132 135
<assignment_b_op> 133 -1
<expression> 133 137
= 137 -1
<term> 138 -1
<expression_element> 138 140
<factor> 140 -1
<term_element> 140 142
const 142 -1
<c_term> 127 -1
<c_expression_element> 127 145
<c_factor> 145 -1
<c_factor_element> 145 147
<condition> 147 -1
<expression> 149 -1
<condition_element> 149 150
<term> 150 -1
<expression_element> 150 152
<factor> 152 -1
<term_element> 152 154
<id> 154 -1
id 156 -1
<array_or_not> 156 157
<relational_op> 151 -1
<expression> 151 159
< 159 -1
<term> 160 -1
<expression_element> 160 162
<factor> 162 -1
<term_element> 162 164
<id> 164 -1
id 166 -1
<array_or_not> 166 167
<id> 129 -1
<assignment_stmt_element> 129 169
; 129 170
id 169 -1
<array_or_not> 169 172
<assignment_u_op> 170 -1
++ 174 -1
begin 131 -1
<stmt_list> 131 176
end 131 177
<statement> 177 -1
<stmt_list_element> 177 179
<simple_stmt> 179 -1
<io_stmt> 181 -1
read 182 -1
( 182 183
<id> 182 184
) 182 185
; 182 186
id 185 -1
<array_or_not> 185 188
[ 189 -1
<array_element_type> 189 190
] 189 191
id 191 -1
<lines> 120 -1
<line> 194 -1
<lines_element> 194 195
<statement> 195 -1
<simple_stmt> 197 -1
<assignment_stmt> 198 -1
<id> 199 -1
<assignment_stmt_element> 199 200
; 199 201
id 200 -1
<array_or_not> 200 203
<assignment_b_op> 201 -1
<expression> 201 205
= 205 -1
<term> 206 -1
<expression_element> 206 208
<factor> 208 -1
<term_element> 208 210
<id> 210 -1
id 212 -1
<array_or_not> 212 213
[ 214 -1
<array_element_type> 214 215
] 214 216
const 216 -1
<lines> 196 -1
<line> 219 -1
<lines_element> 219 220
<statement> 220 -1
<simple_stmt> 222 -1
<assignment_stmt> 223 -1
<id> 224 -1
<assignment_stmt_element> 224 225
; 224 226
id 225 -1
<array_or_not> 225 228
<assignment_b_op> 226 -1
<expression> 226 230
= 230 -1
<term> 231 -1
<expression_element> 231 233
<factor> 233 -1
<term_element> 233 235
<id> 235 -1
id 237 -1
<array_or_not> 237 238
[ 239 -1
<array_element_type> 239 240
] 239 241
const 241 -1
<lines> 221 -1
<line> 244 -1
<lines_element> 244 245
<statement> 245 -1
<structured_statement> 247 -1
<for_stmt> 248 -1
for 249 -1
<assignment_stmt> 249 250
, 249 251
<c_expression> 249 252
, 249 253
<assignment_stmt> 249 254
do 249 255
<compound_stmt> 249 256
<id> 251 -1
<assignment_stmt_element> 251 258
; 251 259
id 258 -1
<array_or_not> 258 261
<assignment_b_op> 259 -1
<expression> 259 263
= 263 -1
<term> 264 -1
<expression_element> 264 266
<factor> 266 -1
<term_element> 266 268
const 268 -1
<c_term> 253 -1
<c_expression_element> 253 271
<c_factor> 271 -1
<c_factor_element> 271 273
<condition> 273 -1
<expression> 275 -1
<condition_element> 275 276
<term> 276 -1
<expression_element> 276 278
<factor> 278 -1
<term_element> 278 280
<id> 280 -1
id 282 -1
<array_or_not> 282 283
<relational_op> 277 -1
<expression> 277 285
< 285 -1
<term> 286 -1
<expression_element> 286 288
<factor> 288 -1
<term_element> 288 290
<id> 290 -1
id 292 -1
<array_or_not> 292 293
<id> 255 -1
<assignment_stmt_element> 255 295
; 255 296
id 295 -1
<array_or_not> 295 298
<assignment_u_op> 296 -1
++ 300 -1
begin 257 -1
<stmt_list> 257 302
end 257 303
<statement> 303 -1
<stmt_list_element> 303 305
<structured_statement> 305 -1
<if_stmt> 307 -1
if 308 -1
<c_expression> 308 309
then 308 310
<compound_stmt> 308 311
<if_stmt_element> 308 312
<c_term> 310 -1
<c_expression_element> 310 314
<c_factor> 314 -1
<c_factor_element> 314 316
<condition> 316 -1
<expression> 318 -1
<condition_element> 318 319
<term> 319 -1
<expression_element> 319 321
<factor> 321 -1
<term_element> 321 323
<id> 323 -1
id 325 -1
<array_or_not> 325 326
[ 327 -1
<array_element_type> 327 328
] 327 329
id 329 -1
<relational_op> 320 -1
<expression> 320 332
< 332 -1
<term> 333 -1
<expression_element> 333 335
<factor> 335 -1
<term_element> 335 337
<id> 337 -1
id 339 -1
<array_or_not> 339 340
begin 312 -1
<stmt_list> 312 342
end 312 343
<statement> 343 -1
<stmt_list_element> 343 345
<simple_stmt> 345 -1
<assignment_stmt> 347 -1
<id> 348 -1
<assignment_stmt_element> 348 349
; 348 350
id 349 -1
<array_or_not> 349 352
<assignment_b_op> 350 -1
<expression> 350 354
= 354 -1
<term> 355 -1
<expression_element> 355 357
<factor> 357 -1
<term_element> 357 359
<id> 359 -1
id 361 -1
<array_or_not> 361 362
[ 363 -1
<array_element_type> 363 364
] 363 365
id 365 -1
<stmt_list> 306 -1
<statement> 368 -1
<stmt_list_element> 368 369
<structured_statement> 369 -1
<if_stmt> 371 -1
if 372 -1
<c_expression> 372 373
then 372 374
<compound_stmt> 372 375
<if_stmt_element> 372 376
<c_term> 374 -1
<c_expression_element> 374 378
<c_factor> 378 -1
<c_factor_element> 378 380
<condition> 380 -1
<expression> 382 -1
<condition_element> 382 383
<term> 383 -1
<expression_element> 383 385
<factor> 385 -1
<term_element> 385 387
<id> 387 -1
id 389 -1
<array_or_not> 389 390
[ 391 -1
<array_element_type> 391 392
] 391 393
id 393 -1
<relational_op> 384 -1
<expression> 384 396
> 396 -1
<term> 397 -1
<expression_element> 397 399
<factor> 399 -1
<term_element> 399 401
<id> 401 -1
id 403 -1
<array_or_not> 403 404
begin 376 -1
<stmt_list> 376 406
end 376 407
<statement> 407 -1
<stmt_list_element> 407 409
<simple_stmt> 409 -1
<assignment_stmt> 411 -1
<id> 412 -1
<assignment_stmt_element> 412 413
; 412 414
id 413 -1
<array_or_not> 413 416
<assignment_b_op> 414 -1
<expression> 414 418
= 418 -1
<term> 419 -1
<expression_element> 419 421
<factor> 421 -1
<term_element> 421 423
<id> 423 -1
id 425 -1
<array_or_not> 425 426
[ 427 -1
<array_element_type> 427 428
] 427 429
id 429 -1
<lines> 246 -1
<line> 432 -1
<lines_element> 432 433
<statement> 433 -1
<simple_stmt> 435 -1
<io_stmt> 436 -1
write 437 -1
( 437 438
<expression_list> 437 439
) 437 440
; 437 441
<expression> 440 -1
<expression_list_element> 440 443
<term> 443 -1
<expression_element> 443 445
<factor> 445 -1
<term_element> 445 447
const 447 -1
, 444 -1
<expression_list> 444 450
<expression> 451 -1
<expression_list_element> 451 452
<term> 452 -1
<expression_element> 452 454
<factor> 454 -1
<term_element> 454 456
<id> 456 -1
id 458 -1
<array_or_not> 458 459
<lines> 434 -1
<line> 461 -1
<lines_element> 461 462
<statement> 462 -1
<simple_stmt> 464 -1
<io_stmt> 465 -1
write 466 -1
( 466 467
<expression_list> 466 468
) 466 469
; 466 470
<expression> 469 -1
<expression_list_element> 469 472
<term> 472 -1
<expression_element> 472 474
<factor> 474 -1
<term_element> 474 476
const 476 -1
, 473 -1
<expression_list> 473 479
<expression> 480 -1
<expression_list_element> 480 481
<term> 481 -1
<expression_element> 481 483
<factor> 483 -1
<term_element> 483 485
<id> 485 -1
id 487 -1
<array_or_not> 487 488
